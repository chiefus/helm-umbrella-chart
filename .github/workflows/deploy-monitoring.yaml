name: Deploy Monitoring and Logging

on:
  push:
    branches:
      - main
    paths:
      - values/monitoring.yaml
      - aws/route53/monitoring-lite.mybahmni.in.json
      - .github/workflows/deploy-monitoring.yaml

  workflow_dispatch:

jobs:
  deploy-monitoring-logging:
    name: Deploy Monitoring & Logging
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: bahmni-cluster-nonprod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Add helm repo
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BAHMNI_AWS_ID }}
          aws-secret-access-key: ${{ secrets.BAHMNI_AWS_SECRET }}
          aws-region: ${{ secrets.BAHMNI_AWS_REGION }}
          role-to-assume: ${{ secrets.BAHMNI_INFRA_ADMIN_ROLE }}
          role-duration-seconds: 900 # 15 mins
          role-session-name: BahmniInfraAdminSession
      - name: Authorise Kubectl with EKS
        run: aws eks update-kubeconfig --name $CLUSTER_NAME
      - name: Upsert Route53 A record with INGRESS_DNS
        run: |
          INGRESS_DNS=$(kubectl -n ingress-nginx  get svc ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
          jq --arg ingress_dns "$INGRESS_DNS" '.Changes[].ResourceRecordSet.AliasTarget.DNSName = $ingress_dns' aws/route53/monitoring-lite.mybahmni.in.json > recordset
          aws route53 change-resource-record-sets --hosted-zone-id ${{ secrets.HOSTED_ZONE_ID }} --change-batch file://recordset
      - name: Helm Upgrade Monitoring Stack
        run: |
          GRAFANA_ADMIN_PASSWORD=$(aws ssm get-parameter --with-decryption --name "/nonprod/grafana/ADMIN_PASSWORD" --query "Parameter.Value" --output text)
          GITHUB_OAUTH_CLIENT_ID=$(aws ssm get-parameter --with-decryption --name "/nonprod/grafana/oauth/github/IPLit/CLIENT_ID" --query "Parameter.Value" --output text)
          GITHUB_OAUTH_CLIENT_SECRET=$(aws ssm get-parameter --with-decryption --name "/nonprod/grafana/oauth/github/IPLit/CLIENT_SECRET" --query "Parameter.Value" --output text)
          helm upgrade monitoring  prometheus-community/kube-prometheus-stack -n monitoring --create-namespace \
          --values=values/monitoring.yaml \
          --set grafana.adminPassword=$GRAFANA_ADMIN_PASSWORD \
          --set 'grafana.grafana\.ini.auth\.github.client_id'=$GITHUB_OAUTH_CLIENT_ID \
          --set 'grafana.grafana\.ini.auth\.github.client_secret'=$GITHUB_OAUTH_CLIENT_SECRET \
          --install

      - name: Helm Upgrade Logging Stack
        run: |
          helm upgrade --install loki --namespace=monitoring grafana/loki-stack \
          --values=values/logging.yaml

